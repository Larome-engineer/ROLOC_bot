import roloc_create
from aiogram import types, Router, F
from aiogram.fsm.context import FSMContext
from data.services_dicts import complex_dict
from aiogram.fsm.state import State, StatesGroup
from keyboards.services_keyboard.web_design_kb import web_design_builder
from keyboards.services_keyboard.polygraphy_kb import polygraphy_builder
from keyboards.services_keyboard.graph_design_kb import graph_design_builder

menu_router = Router()


class FormState(StatesGroup):
    design_type = State()  # –í–∏–¥ –¥–∏–∑–∞–π–Ω–∞
    cost = State()  # –°—Ç–æ–∏–º–æ—Å—Ç—å
    speed = State()  # –°–∫–æ—Ä–æ—Å—Ç—å
    email = State()  # –ü–æ—á—Ç–∞
    phone = State()  # –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    name = State()  # –ò–º—è —á–µ–ª–æ–≤–µ–∫–∞
    communication = State()  # –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
    files = State()  # –§–∞–π–ª—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    wishes = State()  # –ü–æ–∂–µ–ª–∞–Ω–∏—è


class ComplexState(StatesGroup):
    design_type = State()  # –í–∏–¥ –¥–∏–∑–∞–π–Ω–∞
    cost = State()  # –°—Ç–æ–∏–º–æ—Å—Ç—å
    speed = State()  # –°–∫–æ—Ä–æ—Å—Ç—å
    email = State()  # –ü–æ—á—Ç–∞
    phone = State()  # –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    name = State()  # –ò–º—è —á–µ–ª–æ–≤–µ–∫–∞
    communication = State()  # –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏
    files = State()  # –§–∞–π–ª—ã –µ—Å–ª–∏ –µ—Å—Ç—å
    wishes = State()  # –ü–æ–∂–µ–ª–∞–Ω–∏—è


@menu_router.callback_query(F.data.startswith('serv'))
async def services_menu(call: types.CallbackQuery, state: FSMContext):
    await call.answer()

    action = call.data.split("_")[1]

    if action == "wd":
        await call.message.edit_text(
            text='üíª <strong>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–µ–±-–¥–∏–∑–∞–π–Ω–∞</strong>',
            reply_markup=web_design_builder.as_markup()
        )
        await state.set_state(FormState.design_type)

    elif action == "p":
        await call.message.edit_text(
            text='üì∞ <strong>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ–ª–∏–≥—Ä–∞—Ñ–∏–∏</strong>',
            reply_markup=polygraphy_builder.as_markup()
        )
        await state.set_state(FormState.design_type)

    elif action == "gp":
        await call.message.edit_text(
            text='üñç <strong>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞</strong>',
            reply_markup=graph_design_builder.as_markup()
        )
        await state.set_state(FormState.design_type)

    elif action == "rs":
        await roloc_create.roloc_bot.send_poll(
            chat_id=call.from_user.id,
            question="üóÇ –í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏–∏ –∏–∑ –∫–æ–º–ø–ª–µ–∫—Å–∞",
            options=list(complex_dict.values()),
            is_anonymous=False,
            allows_multiple_answers=True
        )
        await state.set_state(FormState.design_type)
